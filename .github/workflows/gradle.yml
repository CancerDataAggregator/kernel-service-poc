name: GCR Push

on:
  push:
    branches:
    - zloery-dev
    - master
jobs:
  build-deploy-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current code
      uses: actions/checkout@v2
    - name: Pull Vault image
      run: docker pull vault:1.1.0
    # Currently, there's no way to add capabilities to Docker actions on Git, and Vault needs IPC_LOCK to run.
    - name: Get Vault token
      id: vault-token-step
      run: |
        docker run --rm --cap-add IPC_LOCK \
        -e "VAULT_ADDR=https://clotho.broadinstitute.org:8200" \
        --entrypoint "/bin/sh" \
        vault:1.1.0 \
        -c "VAULT_TKN=\`/usr/local/bin/docker-entrypoint.sh vault write -field token auth/approle/login role_id=${{ secrets.VAULT_APPROLE_ROLE_ID }} secret_id=${{ secrets.VAULT_APPROLE_SECRET_ID }}\`;echo ::set-output name=vault-token::\$VAULT_TKN;echo ::add-mask::\$VAULT_TKN"
    - name: Get Vault secrets
      id: vault-secret-step
      run: |
        docker run --rm --cap-add IPC_LOCK \
        -e "VAULT_TOKEN=${{ steps.vault-token-step.outputs.vault-token }}" \
        -e "VAULT_ADDR=https://clotho.broadinstitute.org:8200" \
        --entrypoint "/bin/sh" \
        vault:1.1.0 \
        -c "VAULT_SECRET=\`/usr/local/bin/docker-entrypoint.sh vault read -format json secret/dsde/terra/kernel/test\`;echo ::set-output name=vault-secret::\$VAULT_SECRET;echo ::add-mask::\$VAULT_SECRET"
    - name: Parse vault JSON output
      id: vault-parse-step
      run: |
        GCR_EMAIL=$(jq --raw-output '.data.testk' <<< ${{ steps.vault-secret-step.outputs.vault-secret }}); \
          echo ::add-mask::$GCR_EMAIL; \
          echo ::set-output name=gcr_sa_email::$GCR_EMAIL
        GCR_KEY=$(jq --raw-output '.data.testk' <<< ${{ steps.vault-secret-step.outputs.vault-secret }}); \
          echo ::add-mask::$GCR_KEY; \
          echo ::set-output name=gcr_sa_key::$GCR_KEY
    - name: Auth to GCR
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ steps.vault-parse-step.outputs.gcr_sa_email }}
        service_account_key: ${{ steps.vault-parse-step.outputs.gcr_sa_key }}
    - name: Explicitly auth Docker for GCR
      run: gcloud auth configure-docker --quiet
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build and push GCR image using Jib
      run: "./gradlew jib --image=gcr.io/terra-kernel-k8s/workspace-test:ephemeral-test"
#    - name: Auth to existing K8s cluster
#      uses: azure/k8s-set-context@v1
#      with:
#        method: service-account
#        k8s-url: ${{ steps.vault-secret-step.outputs.k8s_api_url }}
#        k8s-secret: ${{ steps.vault-secret-step.outputs.k8s_sa_key }}
#    - name: Deploy service to Dev namepsace
#      run: "kubectl apply -k kustomize.yaml"